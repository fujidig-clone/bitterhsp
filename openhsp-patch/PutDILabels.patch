Index: codegen.cpp
===================================================================
--- codegen.cpp	(revision 617)
+++ codegen.cpp	(working copy)
@@ -2611,6 +2611,29 @@
 }
 
 
+// ラベル名の情報を出力する
+void CToken::PutDILabels( void )
+{
+	int num = ot_buf->GetSize() / sizeof(int);
+	int *table = new int[num];
+	for (int i = 0; i < num; i++) table[i] = -1;
+	for (int i = 0; i < lb->GetNumEntry(); i++) {
+		if (lb->GetType(i) == TYPE_LABEL) {
+			int id = lb->GetOpt(i);
+			table[id] = i;
+		}
+	}
+	di_buf->Put((unsigned char)255);
+	for (int i = 0; i < num; i ++) {
+		if (table[i] == -1) continue;
+		char *name = lb->GetName(table[i]);
+		int dsPos = PutDS(name);
+		PutDI(251, dsPos, i);
+	}
+	delete[] table;
+}
+
+
 char *CToken::GetDS( int ptr )
 {
 	int i;
@@ -2906,6 +2929,9 @@
 		if (( cg_debug )||( cg_putvars )) {
 			PutDIVars();
 		}
+		if ( cg_debug ) {
+			PutDILabels();
+		}
 		PutDI( -1, 0, 0 );								// デバッグ情報終端
 
 		sz_hed = sizeof(HSPHED);
Index: token.h
===================================================================
--- token.h	(revision 617)
+++ token.h	(working copy)
@@ -175,6 +175,7 @@
 	void PutDI( void );
 	void PutDI( int dbg_code, int a, int subid );
 	void PutDIVars( void );
+	void PutDILabels( void );
 	void PutHPI( short flag, short option, char *libname, char *funcname );
 	int PutLIB( int flag, char *name );
 	void SetLIBIID( int id, char *clsid );
